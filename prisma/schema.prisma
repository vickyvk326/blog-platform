generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String           @id @default(cuid())
  name          String
  email         String           @unique
  password      String
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime         @default(now())
  FlowResult    UserFlowResult[]
}

// For OAuth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

// For persistent session after login
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model UserFlowResult {
  id       Int     @id @default(autoincrement())
  name     String?
  userId   String
  user     User    @relation(fields: [userId], references: [id])
  flowId   Int
  flow     Flow    @relation(fields: [flowId], references: [id])
  resultId Int?
  result   Result? @relation(fields: [resultId], references: [id])
}

model Flow {
  id             Int              @id @default(autoincrement())
  steps          Json // stores array of steps
  userFlowResult UserFlowResult[]
  createdAt      DateTime         @default(now())
}

model Result {
  id             Int              @id @default(autoincrement())
  result         Json // stores array/object result
  userFlowResult UserFlowResult[]
  createdAt      DateTime         @default(now())
}
